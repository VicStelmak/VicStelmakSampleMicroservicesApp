@if (ModalWindowIsShown == true)
{
    <div class="modal fade show d-block" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Confirm Deletion</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="() => CloseModal()">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">Are you sure you want to delete this product (@Name)?</div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="() => CloseModal()">Cancel</button>
                    <button type="button" class="btn btn-danger" @onclick="OnDeleteButtonClickedAsync">Delete</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public EventCallback DeleteButtonClicked { get; set; }
    [Parameter]
    public string Name { get; set; }

    private bool ModalWindowIsShown { get; set; }

    internal void CloseModal()
    {
        ModalWindowIsShown = false;
    }

    internal void ShowModal()
    {
        ModalWindowIsShown = true;

        StateHasChanged();
    }

    private async Task OnDeleteButtonClickedAsync()
    {
        ModalWindowIsShown = false;

        await DeleteButtonClicked.InvokeAsync();
    }
}
